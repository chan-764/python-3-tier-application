apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: workshop
  labels:
    role: api
    env: demo
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      role: api
  template:
    metadata:
      labels:
        role: api
    spec:
      imagePullSecrets:
        - name: ecr-registry-secret  # Ensure the secret for pulling images is correct
      containers:
        - name: api
          image: chandanuikey97/dotnet_backend:latest  # Updated to your .NET backend image
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              value: mysql-svc  # MySQL Service name for internal communication
            - name: DB_PORT
              value: "3306"  # MySQL runs on port 3306
            - name: DB_NAME
              value: quotesdb  # Change to your actual database name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username  # Fetch username from Kubernetes Secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password  # Fetch password from Kubernetes Secret
          ports:
            - containerPort: 5001  # Ensure this port matches the actual port your application listens on
          livenessProbe:
            httpGet:
              path: /health  # Update to your API health check endpoint
              port: 5001  
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health  # Update to your API readiness check endpoint
              port: 5001  
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
